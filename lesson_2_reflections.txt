What happens when you initialize a repository?  Why do you need to do it?
	creates the .git file that will track the commits

How is the staging area different from the working directory and the repository?  What value do you think it offers?
	staging area lets you get things ready before committing.  I think the working directory is the list of files included in the repository.
	Now I think the working directory is the folder you are working in.

How can you use the staging area to make sure you have one commit per logical change?
	run git diff --staged to see that you are only committing one thing at a time

What are some situations when branches would be helpful in keeping your history organized?  How would branches help?
	experiment with a new feature/create alternate version
	Branches help by keeping the experimenting clearly separated from the base code so could easily go back to before experiment if need to.

How do the diagrams help you visualize the branch structure?
	makes it easy to see how the branches connect.  much easier to read than the git log --graph --oneline.

What is the result of merging two branches together?  Why do we represent it in the diagram the way we do?
	All code contained in both branches is merged minus any code that was deleted in either branch.

What are the pros and cons of Git's automatic merging vs. always doing merges manually?
	pros: combines code much faster, highlighting conflicts
	cons: doesn't have an overall understanding of the code - assumes all added code is good without understanding how it affects other code